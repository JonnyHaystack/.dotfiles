#zmodload zsh/zprof

# Load aliases
if [ -f ~/.zsh_aliases ]; then
  . ~/.zsh_aliases
fi

# History file settings {{{

HISTFILE=~/.histfile
HISTSIZE=10000
SAVEHIST=10000
#HISTORY_IGNORE="(mv *|cp *|ls|ls *|ll|ll *|la|la *|cd|cd *)"
ZSH_AUTOSUGGEST_HISTORY_IGNORE="?(#c90,)"
ZSH_AUTOSUGGEST_COMPLETION_IGNORE="?(#c90,)"

# No duplicates in command history
setopt HIST_IGNORE_DUPS
setopt HIST_IGNORE_ALL_DUPS
setopt HIST_FIND_NO_DUPS

# Prevent commands beginning with a space from appearing in history
setopt HIST_IGNORE_SPACE

# Append commands to history immediately after execution
setopt INC_APPEND_HISTORY

# }}}

# Key bindings {{{

# Use vi key bindings
bindkey -v
# Bind jj to enter normal mode
#bindkey "jj" vi-cmd-mode

# Case insensitive completions
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=*' 'l:|=* r:|=*'
# Shift-TAB cycles completions backwards
bindkey '^[[Z' reverse-menu-complete
# Fix behaviour of backspace and delete keys
bindkey -v '^?' backward-delete-char
bindkey "^[[3~" delete-char
bindkey "^[3;5~" delete-char
# Make visual mode open command line in editor
autoload edit-command-line
zle -N edit-command-line
bindkey -M vicmd v edit-command-line

# }}}

# Enable color support of ls and other commands and also add handy aliases {{{

if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# Colored GCC warnings and errors
export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# Some more ls aliases
alias ll='ls -alhF'
alias la='ls -A'
alias l='ls -CF'

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Restore X related environment variables for tmux
restore_x11_vars() {
  if [[ -z $TMUX ]]; then
    return 0
  fi

  eval $(tmux show-environment -s)
}

# Function for activating python virtual environments
workon() {
  if (( $# != 1 ))
  then
    echo "Usage: workon <envname>"
  else
    source ~/.virtualenvs/$1/bin/activate
  fi
}

# Python virtualenv fix (for neovim)
if [[ -n $VIRTUAL_ENV && -e "${VIRTUAL_ENV}/bin/activate" ]]; then
  source "${VIRTUAL_ENV}/bin/activate"
fi

# Some general aliases
alias se="sudoedit"
alias treesize="du -had 1 ./ | sort -h"
alias streesize="sudo du -had 1 ./ | sort -h"
alias diff="diff -u --color=auto"
alias diffc="diff -u --color=always"
alias less="less -R"

# tmux aliases
alias tn="tmux new"
alias ta="tmux a"

# todo.txt aliases
alias tdl="todo.sh ls | sort -h"
alias tdla="todo.sh lsa"
alias tda="todo.sh a"
alias tdc="todo.sh do"

# }}}

# git aliases {{{

alias gstatus="ls -lrtd \$(git status --porcelain | grep '^.[?M]' | sed 's/^.. //')"

# }}}

# Package manager aliases {{{

if [ -f /etc/os-release ]; then
  . /etc/os-release
  OS=$ID
fi

case $OS in
arch)
  alias yi="sudo pacman -S"
  alias ys="pacman -Ss"
  alias yu="sudo pacman -Syu"
  alias yr="sudo pacman -Rs"
  ;;
centos)
  alias yi="sudo yum install"
  alias ys="yum search"
  alias yu="sudo yum update"
  alias yr="sudo yum remove"
  alias tmux="tmux -u"
  ;;
debian|raspbian|ubuntu)
  alias yi="sudo apt install"
  alias ys="apt search"
  alias yu="sudo apt update && sudo apt upgrade"
  alias yr="sudo apt remove"
  ;;
nixos)
  alias ys="nix --extra-experimental-features 'nix-command flakes' search nixpkgs"
  ;;
esac

# }}}

# Standard PATH modifications {{{

if [[ $PATH != *"/usr/sbin"* ]]; then
  export PATH=$PATH:/usr/sbin
fi

# }}}

# fzf {{{

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

_gen_fzf_default_opts() {

  local color00='#1d1f21'
  local color01='#282a2e'
  local color02='#373b41'
  local color03='#969896'
  local color04='#b4b7b4'
  local color05='#c5c8c6'
  local color06='#e0e0e0'
  local color07='#ffffff'
  local color08='#cc6666'
  local color09='#de935f'
  local color0A='#f0c674'
  local color0B='#b5bd68'
  local color0C='#8abeb7'
  local color0D='#81a2be'
  local color0E='#b294bb'
  local color0F='#a3685a'

  export FZF_DEFAULT_OPTS="
    --color=bg+:$color01,bg:$color00,spinner:$color0C,hl:$color0D
    --color=fg:$color04,header:$color0D,info:$color0A,pointer:$color0C
    --color=marker:$color0C,fg+:$color06,prompt:$color0A,hl+:$color0D
  "

}

_gen_fzf_default_opts

# }}}

# Auto-Install Zinit {{{

ZINIT_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/zinit.git"
[ ! -d $ZINIT_HOME ] && mkdir -p "$(dirname $ZINIT_HOME)"
[ ! -d $ZINIT_HOME/.git ] && git clone https://github.com/zdharma-continuum/zinit.git "$ZINIT_HOME"
source "${ZINIT_HOME}/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

# Load a few important annexes, without Turbo
# (this is currently required for annexes)
zinit light-mode for \
    zdharma-continuum/zinit-annex-as-monitor \
    zdharma-continuum/zinit-annex-bin-gem-node \
    zdharma-continuum/zinit-annex-patch-dl \
    zdharma-continuum/zinit-annex-rust

### End of Zinit's installer chunk

ZINIT[COMPINIT_OPTS]="-i -C -w"

# Plugins {{{

# Prompt
zinit ice pick"async.zsh" src"pure.zsh"
zinit light sindresorhus/pure

# Extra completions
zinit ice wait"0" blockf lucid
zinit light zsh-users/zsh-completions

# Autosuggestions
zinit ice wait"0" lucid atload"_zsh_autosuggest_start"
zinit light zsh-users/zsh-autosuggestions

# Syntax highlighting - should be the last plugin loaded!
zinit ice lucid atinit"zicompinit; zicdreplay"
zinit light zdharma-continuum/fast-syntax-highlighting

# }}}

#zprof
